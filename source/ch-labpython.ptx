<?xml version="1.0" encoding="UTF-8"?>

<chapter xml:id="ch-labpython" xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>Data Analysis with Python</title>

    <introduction>
        In this chapter, we'll review some useful programming techniques that will be useful for data manipulation, analysis, and visualization.
    </introduction>

    <section xml:id="sec-labpython-dataload">
        <title>Loading Data Files</title>

        <p>
            Here, we are going to import data from a spreadsheet file, bringing it into Python as a NumPy array.
            
            
            <example>
            <title>Import from .csv file using NumPy</title>
                <p>
                    If you are starting with data in an .xlsx file, you must first convert it into a .csv file using the 'Save As' feature, selecting 'CSV (Comma Delimited)' format. Then, import your data into Python using code like the following:
                </p>
                <program language="python">
                <code>
                    import numpy as np

                    # Read filename.csv file into a pandas dataframe. Skip the first two lines as they are string headers.
                    data = np.loadtxt('filename.csv', skiprows=2, delimiter=',');
                    R = data[:,0]; 
                    V = data[:,1];
                </code>
                </program>
            </example>

            <example>
            <title>Import from .xlsx file using Pandas package</title>
                <program language="python">
                    <p>
                        The Pandas package in Python is a powerful data analysis and manipulation tool. If you intend to work with large amounts of data in Python, you may wish to investigate the capabilities of this package. For our purposes now, we'll just scratch the surface of its functionality and solely use it to import data into Python from an xlsx file format (from Excel), eventually converting it into NumPy arrays.
                    </p>
                <code>
                    import pandas as pd
                    import numpy as np

                    # Read filename.xlsx file into a pandas dataframe
                    df = pd.read_excel('filename.xlsx'); 
                    
                    # Create a pandas sequence using the 0th column of data. Rows 0 and 1 contain header info.
                    df_R = df.iloc[2:,0]; 
                    
                    # Create a pandas sequence using the 1st column of data. Rows 0 and 1 contain header info.
                    df_V = df.iloc[2:,1]; 
                    
                    # Convert pandas sequences to numpy arrays
                    R = df_R.to_numpy();
                    V = df_V.to_numpy();
                </code>
                </program>
            </example>
        </p>
    </section>
    <section xml:id="sec-labpython-plotting">
        <title>Line Plots in Python</title>
        <p>
            Once data is accessible in Python, data analysis and visualization can be performed. If one wishes to produce a lineplot using Python, one could use code like the following.
            <sage language="python">
                <input>
                    import numpy as np
                    import matplotlib.pyplot as plt

                    R = np.array([1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 9000, 10000]);
                    V = np.array([0.815, 1.332, 1.880, 2.238, 2.614, 2.777, 2.881, 3.289, 2.974, 3.096]);
                    Vth = np.array([0.833, 1.429, 1.875, 2.222, 2.5, 2.727, 2.917, 3.077, 3.214, 3.333]);

                    plt.plot(R, V, 'o', label='Data');
                    plt.plot(R, Vth, label='Theory');
                    plt.xlim(0,10500);
                    plt.ylim(0,3.5);
                    plt.xlabel(r'Resistance ($\Omega$)')
                    plt.ylabel(r'$V_\text{out}/V_\text{in}$')
                    plt.legend();
                    plt.show();
                </input>
                <output>
                    
                </output>
                </sage>
            <image>
                    <sageplot>
                    import numpy as np
                    import matplotlib.pyplot as plt

                    R = np.array([1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 9000, 10000]);
                    V = np.array([0.815, 1.332, 1.880, 2.238, 2.614, 2.777, 2.881, 3.289, 2.974, 3.096]);
                    Vth = np.array([0.833, 1.429, 1.875, 2.222, 2.5, 2.727, 2.917, 3.077, 3.214, 3.333]);

                    plt.figure(1);
                    plt.plot(R, V, 'o', label='Data');
                    plt.plot(R, Vth, label='Theory');
                    plt.xlim(0,10500);
                    plt.ylim(0,3.5);
                    plt.xlabel('Resistance ($\Omega$)')
                    plt.ylabel('$V_{out}/V_{in}$')
                    plt.legend();
                    plt.savefig("sec-labpython-plotting-2-2.svg");
                    plt.savefig("sec-labpython-plotting-2-2.pdf");
                    </sageplot>
                    </image>
        </p>
        
    </section>
</chapter>